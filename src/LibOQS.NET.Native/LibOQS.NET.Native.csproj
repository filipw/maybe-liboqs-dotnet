<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageId>LibOQS.NET.Native</PackageId>
    <PackageVersion>0.1.2</PackageVersion>
    <Authors>filipw</Authors>
    <Description>Native P/Invoke bindings for liboqs - a C library for quantum-resistant cryptographic algorithms</Description>
    <PackageProjectUrl>https://github.com/filipw/maybe-liboqs-dotnet</PackageProjectUrl>
    <RepositoryUrl>https://github.com/filipw/maybe-liboqs-dotnet</RepositoryUrl>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageTags>quantum cryptography post-quantum liboqs</PackageTags>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Platforms>AnyCPU;x64;ARM64</Platforms>
  </PropertyGroup>

  <ItemGroup>
    <!-- Pack native libraries into the NuGet package with consistent naming -->
    <Content Include="../native/runtimes/win-x64/native/oqs.dll" Condition="Exists('../native/runtimes/win-x64/native/oqs.dll')" Pack="true" PackagePath="runtimes/win-x64/native/oqs.dll" />
    <Content Include="../native/runtimes/win-arm64/native/oqs.dll" Condition="Exists('../native/runtimes/win-arm64/native/oqs.dll')" Pack="true" PackagePath="runtimes/win-arm64/native/oqs.dll" />
    <Content Include="../native/runtimes/linux-x64/native/liboqs.so" Condition="Exists('../native/runtimes/linux-x64/native/liboqs.so')" Pack="true" PackagePath="runtimes/linux-x64/native/liboqs.so" />
    <Content Include="../native/runtimes/linux-arm64/native/liboqs.so" Condition="Exists('../native/runtimes/linux-arm64/native/liboqs.so')" Pack="true" PackagePath="runtimes/linux-arm64/native/liboqs.so" />
    <Content Include="../native/runtimes/osx/native/liboqs.dylib" Condition="Exists('../native/runtimes/osx/native/liboqs.dylib')" Pack="true" PackagePath="runtimes/osx/native/liboqs.dylib" />

    <!-- Copy to output directory for local development and testing -->
    <None Condition="$([MSBuild]::IsOsPlatform('Windows')) And Exists('../native/runtimes/win-x64/native/oqs.dll')" Include="../native/runtimes/win-x64/native/oqs.dll" CopyToOutputDirectory="PreserveNewest" />
    <None Condition="$([MSBuild]::IsOsPlatform('Windows')) And Exists('../native/runtimes/win-arm64/native/oqs.dll')" Include="../native/runtimes/win-arm64/native/oqs.dll" CopyToOutputDirectory="PreserveNewest" />
    <None Condition="$([MSBuild]::IsOsPlatform('Linux')) And Exists('../native/runtimes/linux-x64/native/liboqs.so')" Include="../native/runtimes/linux-x64/native/liboqs.so" CopyToOutputDirectory="PreserveNewest" />
    <None Condition="$([MSBuild]::IsOsPlatform('Linux')) And Exists('../native/runtimes/linux-arm64/native/liboqs.so')" Include="../native/runtimes/linux-arm64/native/liboqs.so" CopyToOutputDirectory="PreserveNewest" />
    <None Condition="$([MSBuild]::IsOsPlatform('OSX')) And Exists('../native/runtimes/osx/native/liboqs.dylib')" Include="../native/runtimes/osx/native/liboqs.dylib" CopyToOutputDirectory="PreserveNewest" />
    
    <!-- Fallback for local development when runtime-specific libraries aren't available -->
    <None Condition="$([MSBuild]::IsOsPlatform('Windows')) And Exists('../native/oqs.dll')" Include="../native/oqs.dll" CopyToOutputDirectory="PreserveNewest" />
    <None Condition="$([MSBuild]::IsOsPlatform('Linux')) And Exists('../native/liboqs.so')" Include="../native/liboqs.so" CopyToOutputDirectory="PreserveNewest" />
    <None Condition="$([MSBuild]::IsOsPlatform('OSX')) And Exists('../native/liboqs.dylib')" Include="../native/liboqs.dylib" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

</Project>
